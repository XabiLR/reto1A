pipeline {
    agent any
   
    stages {
        stage('Jenkins1a-1'){
            steps{
                echo("Crear y ejecutar un pipeline simple, una sola etapa con un “echo”")
            }
        }
        stage('Jenkins1a-2') {
            steps {
                   //echo("Añadir un comando git para traer todo el código fuente del repositorio")
                    git url:'https://github.com/XabiLR/reto1A.git'
            }
        }
        stage('Jenkins1a-3'){
            steps{
                echo ("Verificar que el código se ha descargado mediante comando dir es Windows")
                 bat 'dir'
            }
        }
        stage('Jenkins1a-4'){
			steps{
				echo("Verificar cuál es el espacio de trabajo (echo %WORKSPACE% o echo $WORKSPACE")
				echo "El workspace está en: ${WORKSPACE}"
				}
        }
         stage('BUILD'){
			steps{
				echo("Añadir etapa “Build” (que no hace nada realmente)")
				
				}
        }
         stage ('Unit'){
            steps{
                //echo("funciona")
                bat '''
                        set PYTHONPATH=%WORKSPACE%
                        pytest --junitxml=result-unit.xml test\\unit
                    '''
            }
        }
        stage('Rest'){
            steps{
                bat '''
                    set FLASK_APP=app\\api.py
                    set FLASK_ENV=development
                    start flask run
                    start java -jar C:\\Users\\analitica\\Documents\\GitHub\\wiremock-standalone-3.3.1.jar --port 9090 -root-dir C:\\Users\\analitica\\Documents\\GitHub\\helloworld\\test\\wiremock
                    set PYTHONPATH=%WORKSPACE%
                    pytest --junitxml=result-rest.xml test\\rest
                    '''
            }
        }
        stage('en-paralelo') {
            steps {
               // echo("las pruebas en paralelo")
                parallel(
                    a: {
                        echo("en paralelo UNIT")
                        bat '''
                            set PYTHONPATH=%WORKSPACE%
                            pytest --junitxml=result-unit-parallel.xml test\\unit
                        '''
                    },
                    b: {
                        echo("en paralelo REST")
                         bat '''
                            set FLASK_APP=app\\api.py
                            set FLASK_ENV=development
                            start flask run
                            start java -jar C:\\Users\\analitica\\Documents\\GitHub\\wiremock-standalone-3.3.1.jar --port 9090 -root-dir C:\\Users\\analitica\\Documents\\GitHub\\helloworld\\test\\wiremock
                            set PYTHONPATH=%WORKSPACE%
                            pytest --junitxml=result-rest-parallel.xml test\\rest
                        '''
                    }
                )
            }
        }
        stage('SERVICE'){
            steps{
                junit 'result*.xml'
            }
        }
    }
}
